import React, { useState, useEffect } from "react";

import { FormField, Loader, Card } from "../components";

// Creating a quick return component
const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post.__id} {...post} />);
  }
  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  // States
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchTexts, setSearchTexts] = useState("");
  const [searchResults, setSearchResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  // To Fetch Data
  useEffect(() => {
    const fetchPosts = async () => {
      try {
        setLoading(true);

        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          header: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const results = await response.json();

          setAllPosts(results.data.reverse());
        }
      } catch (error) {
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  // Handle search changed
  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchTexts(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchTexts.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchTexts.toLowerCase())
        );

        setSearchResults(searchResults);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      {/**Title and description */}
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px] ">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI.
        </p>
      </div>

      {/**From field, gets all the props to work with */}
      <div className="mt-16">
        <FormField
          labelName="Search Posts"
          type="text"
          name="text"
          placeholder="Search posts.."
          value={searchTexts}
          handleChange={handleSearchChange}
        />
      </div>
      {/** Showcase of generated arts */}
      {/**If there are any images, it will dynamically change the UI to show, if not, it will say there are none available. */}

      <div className="mt-10">
        {/**Check for loading status */}
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <div>
            {/**Searched text if there's any */}
            {searchTexts && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for&nbsp;
                <span className="text-[#222328]">{searchTexts}</span>
              </h2>
            )}

            {/**Render images based on if there's any searched prompts */}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchTexts ? (
                <RenderCards
                  data={searchResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No Posts Found" />
              )}
            </div>
          </div>
        )}
      </div>
    </section>
  );
};

export default Home;
